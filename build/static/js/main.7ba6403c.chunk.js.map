{"version":3,"sources":["store/use-input.js","components/firebase/firebase-config.js","services/book.services.js","components/ProductForm.js","components/Header.js","assets/cover.jpg","components/Inventory.js","App.js","index.js"],"names":["useInput","validity","useState","enteredInput","setEnteredInput","wasTouched","setWasTouched","inputIsValid","inputIsInValid","enteredInputHandler","event","target","value","inputLostFocusHandler","reset","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","storage","getStorage","productCollectionRef","collection","addProducts","newProducts","addDoc","updateProduct","id","productDoc","doc","updateDoc","deleteProduct","deleteDoc","getAllProducts","getDocs","getProducts","getDoc","isNotEmpty","trim","isPositive","isDiscount","isDesc","length","ProductForm","setId","onImageUrl","isLoading","setIsLoading","error","setError","showForm","setShowForm","enteredName","nameIsValid","nameIsInValid","setNameWasTouched","nameInputHandler","nameLostFocusHandler","setEnteredName","resetName","enteredPrice","priceIsValid","priceIsInValid","setPriceWasTouched","priceInputHandler","priceLostFocusHandler","setEnteredPrice","resetPrice","enteredMrp","mrpIsValid","mrpIsInValid","setMrpWasTouched","mrpInputHandler","mrpLostFocusHandler","setEnteredMrp","resetMrp","enteredDiscount","discountIsValid","discountIsInValid","setDiscountWasTouched","discountInputHandler","discountLostFocusHandler","setEnteredDiscount","resetDiscount","enteredSize","sizeIsValid","sizeIsInValid","setSizeWasTouched","sizeInputHandler","sizeLostFocusHandler","setEnteredSize","resetSize","enteredQuantity","quantityIsValid","quantityIsInValid","setQuantityWasTouched","quantityInputHandler","quantityLostFocusHandler","setEnteredQuantity","resetQuantity","enteredColor","colorIsValid","colorIsInValid","setColorWasTouched","colorInputHandler","colorLostFocusHandler","setEnteredColor","resetColor","enteredDesc","descIsValid","descIsInValid","setDescWasTouched","descInputHandler","descLostFocusHandler","setEnteredDesc","resetDesc","productImage","setProductImage","productImageError","setProductImageError","imageLoading","setImageIsLoading","setUploadLoading","formIsValid","productSubmitHandler","a","preventDefault","newProduct","productName","productPrice","productMrp","productDiscount","productSize","quantity","color","description","image","undefined","ProductDataServices","message","editHandler","snapData","data","useEffect","content","className","onClick","onSubmit","htmlFor","type","onChange","onBlur","name","cols","rows","file","files","size","console","log","fileRef","ref","uploadTask","uploadBytesResumable","contentType","on","snapshot","progress","Math","floor","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","accept","Header","Inventory","idHandler","products","setProducts","docs","map","index","src","e","App","productId","setProductId","ReactDOM","render","document","getElementById"],"mappings":"ySAoCeA,G,MAlCE,SAACC,GACd,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAeN,EAASE,GAiB9B,MAAO,CACHA,eACAI,eACAC,gBAnBoBD,GAAgBF,EAoBpCC,gBACAG,oBAlBwB,SAACC,GACzBN,EAAgBM,EAAMC,OAAOC,QAkB7BC,sBAf0B,WAC1BP,GAAc,IAedF,kBACAU,MAbU,WACVV,EAAgB,IAChBE,GAAc,O,sCCPhBS,EAAMC,YATW,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKIC,EAAKC,YAAaT,GAElBU,EAAUC,YAAWX,GCL5BY,EAAuBC,YAAWL,EAAI,YA6B7B,M,mDAzBXM,YAAc,SAACC,GACX,OAAOC,YAAOJ,EAAsBG,I,KAGxCE,cAAgB,SAACC,EAAID,GACjB,IAAME,EAAaC,YAAIZ,EAAI,WAAYU,GACvC,OAAOG,YAAUF,EAAYF,I,KAGjCK,cAAgB,SAACJ,GACb,IAAMC,EAAaC,YAAIZ,EAAI,WAAYU,GACvC,OAAOK,YAAUJ,I,KAGrBK,eAAiB,WACb,OAAOC,YAAQb,I,KAGnBc,YAAc,SAACR,GACX,IAAMC,EAAaC,YAAIZ,EAAI,WAAYU,GACvC,OAAOS,YAAOR,Q,eC5BhBS,EAAa,SAAC/B,GAAD,MAA4B,KAAjBA,EAAMgC,QAC9BC,EAAa,SAACjC,GAAD,MAA4B,KAAjBA,EAAMgC,QAAiBhC,EAAQ,GACvDkC,EAAa,SAAClC,GAAD,MAA4B,KAAjBA,EAAMgC,QAAiBhC,EAAQ,GAAKA,GAAS,KACrEmC,EAAS,SAACnC,GAAD,OAAWA,EAAMgC,OAAOI,OAAS,IA0ZjCC,EAxZY,SAAC,GAA+B,IAA7BhB,EAA4B,EAA5BA,GAAIiB,EAAwB,EAAxBA,MAChC,GADwD,EAAjBC,WACLjD,oBAAS,IAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KACA,EAA0BnD,mBAAS,IAAnC,mBAAOoD,EAAP,KAAcC,EAAd,KACA,EAAgCrD,oBAAS,GAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KAEA,EASIzD,EAAS2C,GARGe,EADhB,EACEvD,aACcwD,EAFhB,EAEEpD,aACgBqD,EAHlB,EAGEpD,eACeqD,EAJjB,EAIEvD,cACqBwD,EALvB,EAKErD,oBACuBsD,EANzB,EAMElD,sBACiBmD,EAPnB,EAOE5D,gBACO6D,EART,EAQEnD,MAEF,EASId,EAAS6C,GARGqB,EADhB,EACE/D,aACcgE,EAFhB,EAEE5D,aACgB6D,EAHlB,EAGE5D,eACe6D,EAJjB,EAIE/D,cACqBgE,EALvB,EAKE7D,oBACuB8D,EANzB,EAME1D,sBACiB2D,EAPnB,EAOEpE,gBACOqE,EART,EAQE3D,MAEF,EASId,EAAS6C,GARG6B,EADhB,EACEvE,aACcwE,EAFhB,EAEEpE,aACgBqE,EAHlB,EAGEpE,eACeqE,EAJjB,EAIEvE,cACqBwE,EALvB,EAKErE,oBACuBsE,EANzB,EAMElE,sBACiBmE,EAPnB,EAOE5E,gBACO6E,GART,EAQEnE,MAEF,GASId,EAAS8C,GARGoC,GADhB,GACE/E,aACcgF,GAFhB,GAEE5E,aACgB6E,GAHlB,GAGE5E,eACe6E,GAJjB,GAIE/E,cACqBgF,GALvB,GAKE7E,oBACuB8E,GANzB,GAME1E,sBACiB2E,GAPnB,GAOEpF,gBACOqF,GART,GAQE3E,MAEF,GASId,EAAS6C,GARG6C,GADhB,GACEvF,aACcwF,GAFhB,GAEEpF,aACgBqF,GAHlB,GAGEpF,eACeqF,GAJjB,GAIEvF,cACqBwF,GALvB,GAKErF,oBACuBsF,GANzB,GAMElF,sBACiBmF,GAPnB,GAOE5F,gBACO6F,GART,GAQEnF,MAEF,GASId,EAAS6C,GARGqD,GADhB,GACE/F,aACcgG,GAFhB,GAEE5F,aACgB6F,GAHlB,GAGE5F,eACe6F,GAJjB,GAIE/F,cACqBgG,GALvB,GAKE7F,oBACuB8F,GANzB,GAME1F,sBACiB2F,GAPnB,GAOEpG,gBACOqG,GART,GAQE3F,MAEF,GASId,EAAS2C,GARG+D,GADhB,GACEvG,aACcwG,GAFhB,GAEEpG,aACgB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","file":"static/js/main.7ba6403c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (validity) => {\r\n    const [enteredInput, setEnteredInput] = useState('');\r\n    const [wasTouched, setWasTouched] = useState(false);\r\n\r\n    const inputIsValid = validity(enteredInput);\r\n    const inputIsInValid = !inputIsValid && wasTouched;\r\n\r\n\r\n    const enteredInputHandler = (event) => {\r\n        setEnteredInput(event.target.value);       \r\n    }\r\n\r\n    const inputLostFocusHandler = () => {\r\n        setWasTouched(true);\r\n    }\r\n\r\n    const reset = () => {\r\n        setEnteredInput('')\r\n        setWasTouched(false);\r\n    }\r\n\r\n    return {\r\n        enteredInput,\r\n        inputIsValid,\r\n        inputIsInValid,\r\n        setWasTouched,\r\n        enteredInputHandler,\r\n        inputLostFocusHandler,\r\n        setEnteredInput,\r\n        reset\r\n    }\r\n\r\n};\r\n\r\nexport default useInput;","import { initializeApp } from 'firebase/app'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyC17-HHv7r5BvBBKv43p2PpVMzhd_wrVOg',\r\n  authDomain: 'admin-panel-cdc5b.firebaseapp.com',\r\n  projectId: 'admin-panel-cdc5b',\r\n  storageBucket: 'admin-panel-cdc5b.appspot.com',\r\n  messagingSenderId: '789994409100',\r\n  appId: '1:789994409100:web:de3344330179e3b435ffa9',\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n\r\nexport const db = getFirestore(app)\r\n\r\nexport const storage = getStorage(app)\r\n","import { db } from '../components/firebase/firebase-config'\r\n\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from 'firebase/firestore'\r\n\r\nconst productCollectionRef = collection(db, \"products\")\r\n\r\nclass ProductDataService{\r\n\r\n    addProducts = (newProducts) => {\r\n        return addDoc(productCollectionRef, newProducts)\r\n    }\r\n\r\n    updateProduct = (id, updateProduct) => {\r\n        const productDoc = doc(db, \"products\", id)\r\n        return updateDoc(productDoc, updateProduct)\r\n    }\r\n\r\n    deleteProduct = (id) => {\r\n        const productDoc = doc(db, \"products\", id)\r\n        return deleteDoc(productDoc)\r\n    } \r\n\r\n    getAllProducts = () => {\r\n        return getDocs(productCollectionRef)\r\n    }\r\n\r\n    getProducts = (id) => {\r\n        const productDoc = doc(db, \"products\", id)\r\n        return getDoc(productDoc)\r\n    } \r\n\r\n\r\n}\r\nexport default new ProductDataService\r\n","import './ProductForm.css'\r\nimport useInput from '../store/use-input'\r\nimport ProductDataServices from '../services/book.services'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { uploadBytesResumable, ref, getDownloadURL } from 'firebase/storage'\r\nimport { storage } from './firebase/firebase-config'\r\nimport imageCompression from 'browser-image-compression'\r\n\r\nconst isNotEmpty = (value) => value.trim() !== ''\r\nconst isPositive = (value) => value.trim() !== '' && value > 0\r\nconst isDiscount = (value) => value.trim() !== '' && value > 0 && value <= 100\r\nconst isDesc = (value) => value.trim().length > 20\r\n\r\nexport const ProductForm = ({ id, setId, onImageUrl }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [showForm, setShowForm] = useState(false)\r\n\r\n  const {\r\n    enteredInput: enteredName,\r\n    inputIsValid: nameIsValid,\r\n    inputIsInValid: nameIsInValid,\r\n    setWasTouched: setNameWasTouched,\r\n    enteredInputHandler: nameInputHandler,\r\n    inputLostFocusHandler: nameLostFocusHandler,\r\n    setEnteredInput: setEnteredName,\r\n    reset: resetName,\r\n  } = useInput(isNotEmpty)\r\n  const {\r\n    enteredInput: enteredPrice,\r\n    inputIsValid: priceIsValid,\r\n    inputIsInValid: priceIsInValid,\r\n    setWasTouched: setPriceWasTouched,\r\n    enteredInputHandler: priceInputHandler,\r\n    inputLostFocusHandler: priceLostFocusHandler,\r\n    setEnteredInput: setEnteredPrice,\r\n    reset: resetPrice,\r\n  } = useInput(isPositive)\r\n  const {\r\n    enteredInput: enteredMrp,\r\n    inputIsValid: mrpIsValid,\r\n    inputIsInValid: mrpIsInValid,\r\n    setWasTouched: setMrpWasTouched,\r\n    enteredInputHandler: mrpInputHandler,\r\n    inputLostFocusHandler: mrpLostFocusHandler,\r\n    setEnteredInput: setEnteredMrp,\r\n    reset: resetMrp,\r\n  } = useInput(isPositive)\r\n  const {\r\n    enteredInput: enteredDiscount,\r\n    inputIsValid: discountIsValid,\r\n    inputIsInValid: discountIsInValid,\r\n    setWasTouched: setDiscountWasTouched,\r\n    enteredInputHandler: discountInputHandler,\r\n    inputLostFocusHandler: discountLostFocusHandler,\r\n    setEnteredInput: setEnteredDiscount,\r\n    reset: resetDiscount,\r\n  } = useInput(isDiscount)\r\n  const {\r\n    enteredInput: enteredSize,\r\n    inputIsValid: sizeIsValid,\r\n    inputIsInValid: sizeIsInValid,\r\n    setWasTouched: setSizeWasTouched,\r\n    enteredInputHandler: sizeInputHandler,\r\n    inputLostFocusHandler: sizeLostFocusHandler,\r\n    setEnteredInput: setEnteredSize,\r\n    reset: resetSize,\r\n  } = useInput(isPositive)\r\n  const {\r\n    enteredInput: enteredQuantity,\r\n    inputIsValid: quantityIsValid,\r\n    inputIsInValid: quantityIsInValid,\r\n    setWasTouched: setQuantityWasTouched,\r\n    enteredInputHandler: quantityInputHandler,\r\n    inputLostFocusHandler: quantityLostFocusHandler,\r\n    setEnteredInput: setEnteredQuantity,\r\n    reset: resetQuantity,\r\n  } = useInput(isPositive)\r\n  const {\r\n    enteredInput: enteredColor,\r\n    inputIsValid: colorIsValid,\r\n    inputIsInValid: colorIsInValid,\r\n    setWasTouched: setColorWasTouched,\r\n    enteredInputHandler: colorInputHandler,\r\n    inputLostFocusHandler: colorLostFocusHandler,\r\n    setEnteredInput: setEnteredColor,\r\n    reset: resetColor,\r\n  } = useInput(isNotEmpty)\r\n  const {\r\n    enteredInput: enteredDesc,\r\n    inputIsValid: descIsValid,\r\n    inputIsInValid: descIsInValid,\r\n    setWasTouched: setDescWasTouched,\r\n    enteredInputHandler: descInputHandler,\r\n    inputLostFocusHandler: descLostFocusHandler,\r\n    setEnteredInput: setEnteredDesc,\r\n    reset: resetDesc,\r\n  } = useInput(isDesc)\r\n\r\n  const [compressedDownloadLink, setCompressedDownloadLink] = useState('')\r\n\r\n\r\n  const [productImage, setProductImage] = useState('')\r\n  const [productImageError, setProductImageError] = useState('')\r\n  const [imageLoading, setImageIsLoading] = useState(false)\r\n  const [uploadLoading, setUploadLoading] = useState(0)\r\n\r\n  const productImageIsValid = productImageError === ''\r\n\r\n\r\n  const productImageHandler = (event) => {\r\n    const file = event.target.files[0]\r\n    if (!file) {\r\n      setProductImageError('Please Upload Image')\r\n      return\r\n    }\r\n    if (event.target.files[0].size >= 2000000) {\r\n      setProductImageError('Image Size Must be less than 2MB')\r\n      return\r\n    }\r\n    if (\r\n      event.target.files[0].type !== 'image/png' &&\r\n      event.target.files[0].type !== 'image/jpg' &&\r\n      event.target.files[0].type !== 'image/jpeg'\r\n    ) {\r\n      setProductImageError('Please Upload jpg/jpeg or png')\r\n      return\r\n    } else {\r\n      setProductImageError('')\r\n    }\r\n    console.log(event.target.files[0])\r\n\r\n    const fileRef = ref(storage, `/productImages/${file.name}`)\r\n    const uploadTask = uploadBytesResumable(fileRef, file, {\r\n      contentType: 'image/jpeg',\r\n    })\r\n    setImageIsLoading(true)\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const progress = Math.floor(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n        )\r\n        setUploadLoading(progress)\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          setProductImage(downloadURL)\r\n          setImageIsLoading(false)\r\n        })\r\n      },\r\n    )\r\n  }\r\n\r\n  let formIsValid = false\r\n  if (\r\n    nameIsValid &&\r\n    priceIsValid &&\r\n    mrpIsValid &&\r\n    discountIsValid &&\r\n    sizeIsValid &&\r\n    quantityIsValid &&\r\n    colorIsValid &&\r\n    descIsValid &&\r\n    productImageIsValid\r\n  ) {\r\n    formIsValid = true\r\n  }\r\n\r\n  const productSubmitHandler = async (event) => {\r\n    event.preventDefault()\r\n    setNameWasTouched(true)\r\n    setPriceWasTouched(true)\r\n    setMrpWasTouched(true)\r\n    setDiscountWasTouched(true)\r\n    setSizeWasTouched(true)\r\n    setQuantityWasTouched(true)\r\n    setColorWasTouched(true)\r\n    setDescWasTouched(true)\r\n    setProductImageError('Please Upload Image')\r\n\r\n    if (!formIsValid) {\r\n      return\r\n    }\r\n    const newProduct = {\r\n      productName: enteredName,\r\n      productPrice: enteredPrice,\r\n      productMrp: enteredMrp,\r\n      productDiscount: enteredDiscount,\r\n      productSize: enteredSize,\r\n      quantity: enteredQuantity,\r\n      color: enteredColor,\r\n      description: enteredDesc,\r\n      image: productImage,\r\n    }\r\n    setIsLoading(true)\r\n    setError('')\r\n    try {\r\n      if (id !== undefined && id !== '') {\r\n        await ProductDataServices.updateProduct(id, newProduct)\r\n        setId('')\r\n      } else {\r\n        await ProductDataServices.addProducts(newProduct)\r\n      }\r\n    } catch (err) {\r\n      setError(err.message)\r\n    }\r\n    setShowForm(false)\r\n    setIsLoading(false)\r\n\r\n    resetName()\r\n    resetPrice()\r\n    resetMrp()\r\n    resetDiscount()\r\n    resetSize()\r\n    resetQuantity()\r\n    resetColor()\r\n    resetDesc()\r\n  }\r\n\r\n  const editHandler = async () => {\r\n    setShowForm(true)\r\n    try {\r\n      const snapData = await ProductDataServices.getProducts(id)\r\n      setEnteredName(snapData.data().productName)\r\n      setEnteredPrice(snapData.data().productPrice)\r\n      setEnteredMrp(snapData.data().productMrp)\r\n      setEnteredDiscount(snapData.data().productDiscount)\r\n      setEnteredSize(snapData.data().productSize)\r\n      setEnteredQuantity(snapData.data().quantity)\r\n      setEnteredColor(snapData.data().color)\r\n      setEnteredDesc(snapData.data().description)\r\n      setProductImage(snapData.data().image)\r\n    } catch (err) {\r\n      setError(err.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id !== undefined && id !== '') {\r\n      // console.log('form app' + id)\r\n      editHandler(id)\r\n    }\r\n  }, [id])\r\n\r\n  let content = (\r\n    <div className=\"forms__controls__add\">\r\n      <button\r\n        onClick={() => {\r\n          setShowForm(true)\r\n        }}\r\n      >\r\n        Add New Product\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  if (showForm) {\r\n    content = (\r\n      <form onSubmit={productSubmitHandler}>\r\n        <div className=\"forms__controls\">\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Name\">Enter name of the product</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredName}\r\n              onChange={nameInputHandler}\r\n              onBlur={nameLostFocusHandler}\r\n            ></input>\r\n            {nameIsInValid && (\r\n              <p className=\"invalid\">Enter valid name of product</p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Price\">Enter Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={enteredPrice}\r\n              onChange={priceInputHandler}\r\n              onBlur={priceLostFocusHandler}\r\n            ></input>\r\n            {priceIsInValid && (\r\n              <p className=\"invalid\">\r\n                Enter valid price of product(must be in +ve )\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"MRP\">Enter MRP</label>\r\n            <input\r\n              type=\"number\"\r\n              value={enteredMrp}\r\n              onChange={mrpInputHandler}\r\n              onBlur={mrpLostFocusHandler}\r\n            ></input>\r\n            {mrpIsInValid && (\r\n              <p className=\"invalid\">\r\n                Enter valid MRP of product(must be in +ve )\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Discount\">Enter Discount(%)</label>\r\n            <input\r\n              type=\"number\"\r\n              value={enteredDiscount}\r\n              onChange={discountInputHandler}\r\n              onBlur={discountLostFocusHandler}\r\n            ></input>\r\n            {discountIsInValid && (\r\n              <p className=\"invalid\">Enter valid discount on product(0-100)%</p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Size\">Enter size</label>\r\n            <input\r\n              type=\"number\"\r\n              value={enteredSize}\r\n              onChange={sizeInputHandler}\r\n              onBlur={sizeLostFocusHandler}\r\n            ></input>\r\n            {sizeIsInValid && (\r\n              <p className=\"invalid\">\r\n                Enter valid size of product(must be in +ve)\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Quantitiy\">Enter quantity</label>\r\n            <input\r\n              type=\"number\"\r\n              value={enteredQuantity}\r\n              onChange={quantityInputHandler}\r\n              onBlur={quantityLostFocusHandler}\r\n            ></input>\r\n            {quantityIsInValid && (\r\n              <p className=\"invalid\">\r\n                Enter valid quantity of product(must be in +ve )\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Color\">Enter color</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredColor}\r\n              onChange={colorInputHandler}\r\n              onBlur={colorLostFocusHandler}\r\n            ></input>\r\n            {colorIsInValid && (\r\n              <p className=\"invalid\">Enter valid color of product</p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"Desc\">Describe your product</label>\r\n            <textarea\r\n              name=\"paragraph_text\"\r\n              cols=\"40\"\r\n              rows=\"10\"\r\n              value={enteredDesc}\r\n              onChange={descInputHandler}\r\n              onBlur={descLostFocusHandler}\r\n            ></textarea>\r\n            {descIsInValid && (\r\n              <p className=\"invalid\">\r\n                Enter valid description(more than 20 words)\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"forms__control\">\r\n            <label htmlFor=\"image\">Upload image of the product</label>\r\n            <input\r\n              type=\"file\"\r\n              onChange={productImageHandler}\r\n              accept=\"image/*\"\r\n            ></input>\r\n            {imageLoading && <p>Please wait image is geting uploaded....</p>}\r\n            {productImageError && (\r\n              <p className=\"invalid\">{productImageError}</p>\r\n            )}\r\n          </div>\r\n          {/* <button onClick={getProductsHandler}>Refresh</button> */}\r\n          <button type=\"submit\">Add/Update Product</button>\r\n          <button\r\n            onClick={() => {\r\n              setShowForm(false)\r\n            }}\r\n          >\r\n            close\r\n          </button>\r\n        </div>\r\n        <div className=\"forms__actions\"></div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p className=\"forms__controls__p\">Loading...</p>\r\n  }\r\n\r\n  if (error) {\r\n    content = (\r\n      <div className=\"forms__controls__add\">\r\n        <p className=\"forms__controls__p\">{error}</p>\r\n        <button\r\n          onClick={() => {\r\n            setShowForm(true)\r\n          }}\r\n        >\r\n          Add New Product\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <Fragment>{content}</Fragment>\r\n}\r\n\r\nexport default ProductForm\r\n","import React, { Fragment } from 'react'\r\nimport './Header.css'\r\nimport coverImage from '../assets/cover.jpg'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Fragment>\r\n        <header className='header'>\r\n      <h2>\r\n        Admin Panel\r\n      </h2>\r\n  </header>;\r\n      <div className='main-image'>\r\n      </div> \r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/cover.cfa2625d.jpg\";","import React, { Fragment, useEffect, useState } from 'react'\r\nimport ProductDataServices from '../services/book.services'\r\nimport './Inventory.css'\r\n\r\nexport const Inventory = ({ idHandler }) => {\r\n  const [products, setProducts] = useState([])\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  const getProducts = async () => {\r\n    const data = await ProductDataServices.getAllProducts()\r\n    // console.log(data.docs)\r\n    setProducts(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    ProductDataServices.deleteProduct(id)\r\n    getProducts()\r\n  }\r\n\r\n  const getProductsHandler = () => {\r\n    getProducts()\r\n  }\r\n  return (\r\n    <div className=\"forms__controls\">\r\n      <button onClick={getProductsHandler}>Refresh Products List</button>\r\n      {products.map((doc, index) => {\r\n        return (\r\n          <div className=\"meal\" key={doc.id}>\r\n              <div className='inside__list'>\r\n            <div>\r\n              <h2>{index + 1}</h2>\r\n              <h3>Name = {doc.productName}</h3>\r\n              <div className=\"price\">price = {doc.productPrice}</div>\r\n              <div className=\"values\">Mrp = {doc.productMrp}</div>\r\n              <div className=\"values\">Discount = {doc.productDiscount}</div>\r\n              <div className=\"values\">Size = {doc.productSize}</div>\r\n              <div className=\"values\">quantity = {doc.quantity}</div>\r\n              <div className=\"values\">color = {doc.color}</div>\r\n              <div className=\"values\">Description = {doc.description}</div>\r\n            </div>\r\n            <div>\r\n              <img src={doc.image} className=\"image__class\" />\r\n            </div>\r\n              </div>\r\n            <div>\r\n              <button onClick={(e) => idHandler(doc.id)}>Edit</button>\r\n              <button onClick={(e) => deleteHandler(doc.id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inventory\r\n","import React, { Fragment, useState } from 'react';\nimport ProductForm from './components/ProductForm';\nimport Header  from './components/Header';\nimport Inventory  from './components/Inventory';\n\nfunction App() {\n\n  const [productId, setProductId] = useState(\"\")\n  // const [imgUrl, setImgUrl] = useState(\"\")\n\n  const productIdHandler = (id) => {\n    // console.log(id)\n    setProductId(id)\n\n  }\n\n  // const imgHandler = (url) => {\n  //   setImgUrl(url)\n  // }\n \n\n\n  return (\n    <Fragment>\n      <Header/>\n      <ProductForm id={productId} setId={setProductId} />\n      <Inventory idHandler={productIdHandler}/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}